name: Build_TPLINK_WR720N

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      log_switch:
        description: "Compile log switch"
        required: false
        default: "false"
        type: boolean
        options:
          - true
          - false
          
env:
  REPO_URL: https://github.com/openwrt/openwrt
  CONFIG_FILE: 'config/TL_WR720N.config'
  REPO_BRANCH: openwrt-19.07
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: 清理磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true

    - name: 安装Python 2.7
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y build-essential checkinstall libncursesw5-dev libssl-dev \
          libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev
        wget -q https://www.python.org/ftp/python/2.7.18/Python-2.7.18.tgz
        tar -xzf Python-2.7.18.tgz
        cd Python-2.7.18
        ./configure --enable-optimizations
        make -j$(nproc)
        sudo make install
        cd ..
        rm -rf Python-2.7.18*

    - name: 初始化环境
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/main/depend_ubuntu2204_openwrt)
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: 克隆源码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: 配置缓存目录
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/{dl,staging_dir,build_dir}
        ln -sfn /mnt/openwrt/dl openwrt/dl
        ln -sfn /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sfn /mnt/openwrt/build_dir openwrt/build_dir
        
    - name: 更新安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 自定义配置
      run: |
        chmod +x ./op-customize.sh && ./op-customize.sh
        [[ -d "files" ]] && cp -r files openwrt/files
        cp -fv "${CONFIG_FILE}" openwrt/.config
        cd openwrt/
        make defconfig
        
    - name: 下载软件包
      id : download    
      run: |
        cd openwrt/
        make download -j$(nproc) || { echo "::error::下载失败"; exit 1; }
        find dl -size -1024c -delete
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 编译固件
      id: compile
      if: steps.download.outputs.status == 'success'
      run: |
        cd openwrt/
        if [[ "${{ inputs.log_switch }}" == "true" ]]; then
            make -j1 V=s
        else
            make -j$(nproc)
        fi
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 整理固件文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/* && rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件产物
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*

    - name: 准备发布信息
      id : release
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        cat <<EOF > release.txt
        🚀 TP-Link WR720N 固件
        ---------------------
        源码: $REPO_URL
        分支: $REPO_BRANCH
        时间: $(date +"%Y-%m-%d %H:%M")
        注意: 基于OpenWrt 19.07版本
        EOF
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 创建发布版本
      uses: softprops/action-gh-release@v1
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: 清理旧工作流
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
