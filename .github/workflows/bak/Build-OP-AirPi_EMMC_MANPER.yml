name: Build_AirPi_EMMC_MANPER

on: 
  repository_dispatch:
  workflow_dispatch:
    inputs:
      log_switch:
        description: "Compile log switch"
        required: false
        default: "false"
        type: boolean
        options:
          - true
          - false
          
      device_config:
        description: "模块插件选择"
        required: false
        default: "modem"
        type: choice
        options:
          - modem
          - qmodem
          
env:
  REPO_URL : https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3  

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/main/depend_ubuntu2204_openwrt)
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Clone source code
      id: codes
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        # echo 'src-git istore https://github.com/linkease/istore;main' >> feeds.conf.default
        # echo 'src-git nas https://github.com/linkease/nas-packages.git;master' >> feeds.conf.default
        # echo 'src-git nas_luci https://github.com/linkease/nas-packages-luci.git;main' >> feeds.conf.default
        if [[ "${{ inputs.device_config }}" == "qmodem" ]]; then
            echo 'src-git Qmodem https://github.com/FUjr/QModem.git;main' >> feeds.conf.default
        fi

    - name: Free up disk space
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/{dl,staging_dir,build_dir}
        sudo chown -R $USER:$GROUPS /mnt/openwrt
        ln -sfn /mnt/openwrt/dl openwrt/dl
        ln -sfn /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sfn /mnt/openwrt/build_dir openwrt/build_dir
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        # sed -i 's/PKG_VERSION:=0.46.033/PKG_VERSION:=0.46.086/' feeds/luci/applications/luci-app-openclash/Makefile
        ./scripts/feeds install -a -f

    - name: Configuration Customization
      run: |
        if [[ "${{ inputs.device_config }}" == "modem" ]]; then
            CONFIG_FILE="config/airpi.config"
        else
            CONFIG_FILE="config/airpi-qmodem.config"
        fi
        chmod +x ./imm-customize.sh && ./imm-customize.sh
        [[ -d "files" ]] && mv -f files openwrt/files
        cp -fv "${CONFIG_FILE}" openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      id: package
      run: |
        cd openwrt/
        make download -j$(nproc) || { echo "❌ 下载失败"; exit 1; }
        find dl -size -1024c -delete
        echo "status=success" >> ${GITHUB_OUTPUT}
 
    - name: Compile the OpenWrt
      id : compile
      if : steps.package.outputs.status == 'success'
      run: |
        cd openwrt/
        if [[ "${{ inputs.log_switch }}" == "true" ]]; then
            make -j1 V=s
        else
            make -j$(nproc)
        fi
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/* || { echo "❌ 固件目录不存在"; exit 1; }
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}/*

    - name: Generate release tag
      id : release
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success'
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        cat <<EOF > release.txt
        🚀 immortalwrt 固件编译结果
        --------------------------
        设备: AirPi 3000m/3000e
        时间: $(date +"%Y-%m-%d %H:%M")
        内核: $(grep 'LINUX_VERSION-' openwrt/.config | cut -d= -f2)
        插件：openclash，pw等等
        EOF

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.organize.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
